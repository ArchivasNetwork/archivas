name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  VERSION: ${{ github.ref_name }}

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Build
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 \
            go build -ldflags "-s -w" \
            -o dist/archivas-node-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/archivas-node
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 \
            go build -ldflags "-s -w" \
            -o dist/archivas-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/archivas
      - uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:latest

  release:
    runs-on: ubuntu-latest
    needs: [build-binaries]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          path: dist
          merge-multiple: true
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Archivas ${{ env.VERSION }}
          body: |
            ## Archivas ${{ env.VERSION }}
            
            Production-ready blockchain release.
            
            **Docker:** `ghcr.io/${{ github.repository }}:${{ env.VERSION }}`
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

